else if (data3[i,1] == "south"){
south.total =  south.total + data3[i,2]
south.counter = south.counter + 1
}
else if (data3[i,1] == "east"){
east.total = east.total + data3[i,2]
east.counter = east.counter + 1
}
else if (data3[i,1] == "west"){
west.total = west.total + data3[i,2]
west.counter = west.counter + 1
}
}
#Compute Averages
north.average <- north.total/north.counter
south.average <- south.total/south.counter
east.average  <- east.total/east.counter
west.average  <- west.total/west.counter
averages <- c(north.average, south.average, east.average, west.average)
data3 <- data.frame(averages)
#Bar Graph of Means
mean.bar <- ggplot(data = averages, aes(averages))
mean.bar = mean.bar + geom_bar() + coord_cartesian()
mean.bar
#######Problem 1
#Initializing Data vectors to empty
sequenceID <- NULL
sequenceLENGTH <- NULL
percentCG <- NULL
#Reading the File
fileName <- "Lecture11.fasta"
readFile<- file(fileName,open="r") #Makng fileName readable
linn <-readLines(readFile) #Setting linn to the lines of conn
#Looping through contents of file
j = 1
k = 1
for (i in 1:length(linn)){
linn_split <- strsplit(linn[i], "")[[1]] #Splits line into series of characters to be accessed
#Conditional to see if the ith line is a sequence ID
if(linn_split[1] == ">"){
sequenceID[j] = substring(linn[i],5)
j = j + 1
#Calculations for the base pairs
} else {
#Getting length of sequence
sequenceLENGTH[k] = nchar(linn[i], type = "chars")
#Calculating percentCG
CG = 0
for (base in linn_split) {
if (base == "G" || base == "C") {
CG = CG + 1
}
}
percentCG[k] = CG/sequenceLENGTH[k]*100
k = k + 1
}
}
close(readFile)
#Putting everything into a table called DNA.dat
library(ggplot2)
DNA.dat <- data.frame(sequenceID, sequenceLENGTH, percentCG)
#Histogram of Sequence Length
length.hist <- ggplot(data = DNA.dat, aes(sequenceLENGTH))
length.hist = length.hist + geom_histogram(binwidth = 5) + coord_cartesian()
length.hist
#Histogram of GC Content
GC.hist <- ggplot(data = DNA.dat, aes(percentCG))
GC.hist = GC.hist + geom_histogram(binwidth = 5) + coord_cartesian()
GC.hist
#######Problem 3
#Read Data into Table
data3 <- read.table(file = "data.txt", header = TRUE, sep=",")
#Initialize Values to 0
north.total <- 0
south.total <- 0
east.total  <- 0
west.total  <- 0
north.counter <- 0
south.counter <- 0
east.counter  <- 0
west.counter  <- 0
#Go through data and add to appopriate region
for (i in 1:nrow(data3)){
if (data3[i,1] == "north"){
north.total = north.total + data3[i,2]
north.counter = north.counter + 1
}
else if (data3[i,1] == "south"){
south.total =  south.total + data3[i,2]
south.counter = south.counter + 1
}
else if (data3[i,1] == "east"){
east.total = east.total + data3[i,2]
east.counter = east.counter + 1
}
else if (data3[i,1] == "west"){
west.total = west.total + data3[i,2]
west.counter = west.counter + 1
}
}
#Compute Averages
north.average <- north.total/north.counter
south.average <- south.total/south.counter
east.average  <- east.total/east.counter
west.average  <- west.total/west.counter
averages <- c(north.average, south.average, east.average, west.average)
averages <- data.frame(averages)
#Bar Graph of Means
mean.bar <- ggplot(data = averages, aes(averages))
mean.bar = mean.bar + geom_bar() + coord_cartesian()
mean.bar
View(data3)
View(data3)
View(data3)
View(data3)
#######Problem 1
#Initializing Data vectors to empty
sequenceID <- NULL
sequenceLENGTH <- NULL
percentCG <- NULL
#Reading the File
fileName <- "Lecture11.fasta"
readFile<- file(fileName,open="r") #Makng fileName readable
linn <-readLines(readFile) #Setting linn to the lines of conn
#Looping through contents of file
j = 1
k = 1
for (i in 1:length(linn)){
linn_split <- strsplit(linn[i], "")[[1]] #Splits line into series of characters to be accessed
#Conditional to see if the ith line is a sequence ID
if(linn_split[1] == ">"){
sequenceID[j] = substring(linn[i],5)
j = j + 1
#Calculations for the base pairs
} else {
#Getting length of sequence
sequenceLENGTH[k] = nchar(linn[i], type = "chars")
#Calculating percentCG
CG = 0
for (base in linn_split) {
if (base == "G" || base == "C") {
CG = CG + 1
}
}
percentCG[k] = CG/sequenceLENGTH[k]*100
k = k + 1
}
}
close(readFile)
#Putting everything into a table called DNA.dat
library(ggplot2)
DNA.dat <- data.frame(sequenceID, sequenceLENGTH, percentCG)
#Histogram of Sequence Length
length.hist <- ggplot(data = DNA.dat, aes(sequenceLENGTH))
length.hist = length.hist + geom_histogram(binwidth = 5) + coord_cartesian()
length.hist
#Histogram of GC Content
GC.hist <- ggplot(data = DNA.dat, aes(percentCG))
GC.hist = GC.hist + geom_histogram(binwidth = 5) + coord_cartesian()
GC.hist
#######Problem 3
#Read Data into Table
data3 <- read.table(file = "data.txt", header = TRUE, sep=",")
attach(data3)
#Initialize Values to 0
north.total <- 0
south.total <- 0
east.total  <- 0
west.total  <- 0
north.counter <- 0
south.counter <- 0
east.counter  <- 0
west.counter  <- 0
#Go through data and add to appopriate region
for (i in 1:nrow(data3)){
if (data3[i,1] == "north"){
north.total = north.total + data3[i,2]
north.counter = north.counter + 1
}
else if (data3[i,1] == "south"){
south.total =  south.total + data3[i,2]
south.counter = south.counter + 1
}
else if (data3[i,1] == "east"){
east.total = east.total + data3[i,2]
east.counter = east.counter + 1
}
else if (data3[i,1] == "west"){
west.total = west.total + data3[i,2]
west.counter = west.counter + 1
}
}
#Compute Averages
north.average <- north.total/north.counter
south.average <- south.total/south.counter
east.average  <- east.total/east.counter
west.average  <- west.total/west.counter
averages <- c(north.average, south.average, east.average, west.average)
averages <- data.frame(averages)
#Bar Graph of Means
mean.bar <- ggplot(data = averages, aes(averages))
mean.bar = mean.bar + geom_bar() + coord_cartesian()
mean.bar
#Scatter Plot of all Observations
scatter.observations <- ggplot(data = data3, aes(region, observation))
scatter.observations
scatter.observations <- ggplot(data = data3, aes(region, observations))
scatter.observations
region
#Scatter Plot of all Observations
scatter.observations <- ggplot(data = data3, aes(region, as.factor(observations)))
scatter.observations
scatter.observations <- ggplot(data = data3, aes(as.factor(region), observations))
scatter.observations
#Scatter Plot of all Observations
scatter.observations <- ggplot(data = data3, aes(as.factor(region), observations))
scatter.observations
#######Problem 1
#Initializing Data vectors to empty
sequenceID <- NULL
sequenceLENGTH <- NULL
percentCG <- NULL
#Reading the File
fileName <- "Lecture11.fasta"
readFile<- file(fileName,open="r") #Makng fileName readable
linn <-readLines(readFile) #Setting linn to the lines of conn
#Looping through contents of file
j = 1
k = 1
for (i in 1:length(linn)){
linn_split <- strsplit(linn[i], "")[[1]] #Splits line into series of characters to be accessed
#Conditional to see if the ith line is a sequence ID
if(linn_split[1] == ">"){
sequenceID[j] = substring(linn[i],5)
j = j + 1
#Calculations for the base pairs
} else {
#Getting length of sequence
sequenceLENGTH[k] = nchar(linn[i], type = "chars")
#Calculating percentCG
CG = 0
for (base in linn_split) {
if (base == "G" || base == "C") {
CG = CG + 1
}
}
percentCG[k] = CG/sequenceLENGTH[k]*100
k = k + 1
}
}
close(readFile)
#Putting everything into a table called DNA.dat
library(ggplot2)
DNA.dat <- data.frame(sequenceID, sequenceLENGTH, percentCG)
#Histogram of Sequence Length
length.hist <- ggplot(data = DNA.dat, aes(sequenceLENGTH))
length.hist = length.hist + geom_histogram(binwidth = 5) + coord_cartesian()
length.hist
#Histogram of GC Content
GC.hist <- ggplot(data = DNA.dat, aes(percentCG))
GC.hist = GC.hist + geom_histogram(binwidth = 5) + coord_cartesian()
GC.hist
#######Problem 3
#Read Data into Table
data3 <- read.table(file = "data.txt", header = TRUE, sep=",")
attach(data3)
#Initialize Values to 0
north.total <- 0
south.total <- 0
east.total  <- 0
west.total  <- 0
north.counter <- 0
south.counter <- 0
east.counter  <- 0
west.counter  <- 0
#Go through data and add to appopriate region
for (i in 1:nrow(data3)){
if (data3[i,1] == "north"){
north.total = north.total + data3[i,2]
north.counter = north.counter + 1
}
else if (data3[i,1] == "south"){
south.total =  south.total + data3[i,2]
south.counter = south.counter + 1
}
else if (data3[i,1] == "east"){
east.total = east.total + data3[i,2]
east.counter = east.counter + 1
}
else if (data3[i,1] == "west"){
west.total = west.total + data3[i,2]
west.counter = west.counter + 1
}
}
#Compute Averages
north.average <- north.total/north.counter
south.average <- south.total/south.counter
east.average  <- east.total/east.counter
west.average  <- west.total/west.counter
averages <- c(north.average, south.average, east.average, west.average)
averages <- data.frame(averages)
#Bar Graph of Means
mean.bar <- ggplot(data = averages, aes(averages))
mean.bar = mean.bar + geom_bar() + coord_cartesian()
mean.bar
Region <- c(rep("north",1),rep("south",2),rep("east",3),rep("west",4))
df <- data.frame(Region, observations)
#Scatter Plot of all Observations
scatter.observations <- ggplot(data = data3, aes(as.factor(region), observations))
scatter.observations
GC.hist
source('~/Desktop/Biocomputing/Intro_Biocomp_ND_317_Tutorial7/Exercise07.R', echo=TRUE)
GC.hist
scatter.observations <- ggplot(data = data3, aes(as.factor(region), observations))
scatter.observations
scatter.observations <- ggplot(data = data3, aes(as.factor(region), observations))
scatter.observations = scatter.observations + geom_jitter() + coord_cartesian()
scatter.observations
source('~/Desktop/Biocomputing/Intro_Biocomp_ND_317_Tutorial7/Exercise07.R', echo=TRUE)
source('~/Desktop/Biocomputing/Intro_Biocomp_ND_317_Tutorial7/Exercise07.R', echo=TRUE)
a
source('~/Desktop/Biocomputing/Intro_Biocomp_ND_317_Tutorial7/Exercise07.R', echo=TRUE)
source('~/Desktop/Biocomputing/Intro_Biocomp_ND_317_Tutorial7/Exercise07.R', echo=TRUE)
source('~/Desktop/Biocomputing/Intro_Biocomp_ND_317_Tutorial7/Exercise07.R', echo=TRUE)
a
scatter.observations
mean.bar
source('~/Desktop/Biocomputing/Intro_Biocomp_ND_317_Tutorial7/Exercise07.R', echo=TRUE)
a
mean(north)
mean(region$north)
View(data3)
View(data3)
View(data2)
View(data2)
View(data3)
View(data3)
cd ..
scatter.observations
setwd("~/Desktop/Biocomputing/Intro_Biocomp_ND_317_Tutorial8")
fileName <- "Cflorida.vcf"
readFile<- file(fileName,open="r") #Makng fileName readable
linn <-readLines(readFile) #Setting linn to the lines of conn
linn
fileName <- "Cflorida.vcf"
readFile<- file(fileName,open="r") #Makng fileName readable
linn <-readLines(readFile) #Setting linn to the lines of conn
#Looping through contents of file
j = 1
k = 1
for (i in 1:length(linn)){
linn[i]
}
close(readFile)
library("stringr", lib.loc="~/anaconda/lib/R/library")
source('~/.active-rstudio-document', echo=TRUE)
fileName <- "Cflorida.vcf"
readFile<- file(fileName,open="r") #Makng fileName readable
linn <-readLines(readFile) #Setting linn to the lines of conn
regex.string <- C
#Looping through contents of file
for (i in 1:length(linn)){
str_extract(linn,regex.string)
}
close(readFile)
View(regex.string)
name.convention <- C
#Looping through contents of file
for (i in 1:length(linn)){
str_extract(linn,name.convention)
}
close(readFile)
source('~/.active-rstudio-document', echo=TRUE)
library(stringr)
######Problem 1
fileName <- "Cflorida.vcf"
readFile<- file(fileName,open="r") #Makng fileName readable
linn <-readLines(readFile) #Setting linn to the lines of conn
name.convention <- C
grep(name.convention,linn[1])
scan(file = "Cflorida.vcf", what = string, sep = " ")
scan(file = "Cflorida.vcf", what = character(), sep = " ")
readFile <- scan(file = "Cflorida.vcf", what = character(), sep = " ")
name.convention <- C
grep(name.convention, readFile)
grep(C, readFile)
readFile <- scan(file = "Cflorida.vcf", what = character(), sep = "\n")
readFile
readFile[1]
readFile[2]
grep(C, readFile[2])
str_extract(readfile[2], C)
#Looping through contents of file
for (i in 1:length(readFile)){
}
close(readFile)
readFile <- scan(file = "Cflorida.vcf", what = character(), sep = "\n")
readFile[2]
A <- "[Cc][Ff](07)?\\.[Aa]2?"
str_replace_all(readFile[2],A,"Cf.Sfa")
readFile[2]
A <- "[Cc][Ff](07)?\\.[Aa]2?"
str_replace_all(readFile[2],A,"Cf.Sfa")
B <- "[Cc][Gg](07)?\\.[Aa]2?"
str_replace_all(readFile[2],B,"Cf.Gai")
readFile <- scan(file = "Cflorida.vcf", what = character(), sep = "\n")
file.create("FixedData.vcf"
readFile <- scan(file = "Cflorida.vcf", what = character(), sep = "\n")
file.create("FixedData.vcf"
readFile <- scan(file = "Cflorida.vcf", what = character(), sep = "\n")
file.create("FixedData.vcf")
newFile <- file.create("FixedData.vcf")
file.create("FixedData.vcf")
readFile <- scan(file = "Cflorida.vcf", what = character(), sep = "\n")
file.create("FixedData.vcf")
A <- "[Cc][Ff](07)?\\.[Aa]2?"
str_replace_all(readFile[2],A,"Cf.Sfa")
B <- "[Cc][Gg](07)?\\.[Aa]2?"
str_replace_all(readFile[2],B,"Cf.Gai")
linn <-readLines(readFile) #Setting linn to the lines of conn
#Looping through contents of file
for (i in 1:length(readFile)){
if(str_detect(readFile[i], "##"){
write(readFile[i],file=filename,append=TRUE)
}
}
close(readFile)
readFile <- scan(file = "Cflorida.vcf", what = character(), sep = "\n")
file.create("FixedData.vcf")
#Looping through contents of file
for (i in 1:length(readFile)){
if(str_detect(readFile[i], "##"){
write(readFile[i],file=filename,append=TRUE)
}
}
#Looping through contents of file
for (i in 1:length(readFile)){
if(str_detect(readFile[i], "##"){
write(readFile[i],file="FixedData.vcf",append=TRUE)
}
}
for (i in 1:length(readFile)){
i
if(str_detect(readFile[i], "##"){
write(readFile[i],file="FixedData.vcf",append=TRUE)
}
}
length(readFile)
readFile[1]
readFile[2]
str_detect(readFile[1],"##")
source('~/.active-rstudio-document', echo=TRUE)
for (i in 1:length(readFile)){
if(str_detect(readFile[i], "##"){
write(readFile[i],file="FixedData.vcf",append=TRUE)
}
}
length(readFile)
for(i in 1:length(readFile)){
i
}
for(i in 1:length(readFile)){
i + 1
}
for(i in 1:length(readFile)){
print(i)
}
for (i in 1:length(readFile)) {
print(i)
if(str_detect(readFile[i], "##"){
write(readFile[i],file="FixedData.vcf",append=TRUE)
}
}
#Looping through contents of file
for (i in 1:length(readFile)) {
if(str_detect(readFile[i], "##")){
write(readFile[i],file="FixedData.vcf",append=TRUE)
}
}
file.create("FixedData.vcf")
for (i in 1:length(readFile)) {
if(str_detect(readFile[i], "##")){
write(readFile[i],file="FixedData.vcf",append=TRUE)
}
}
for (i in 1:length(readFile)) {
if(str_detect(readFile[i], "##")){
write(readFile[i],file="FixedData.vcf",append=TRUE)
} else if (str_detect(readFile[i], "#")) {
write(readFile[i],file="FixedData.vcf",append=TRUE)
}
}
library(stringr)
######Problem 1
readFile <- scan(file = "Cflorida.vcf", what = character(), sep = "\n")
file.create("FixedData.vcf")
A <- "[Cc][Ff](07)?\\.[Aa]2?"
B <- "[Cc][Gg](07)?\\.[Aa]2?"
str_replace_all(readFile[2],B,"Cf.Gai")
#Looping through contents of file
for (i in 1:length(readFile)) {
if(str_detect(readFile[i], "##")){
write(readFile[i],file="FixedData.vcf",append=TRUE)
} else if (str_detect(readFile[i], "#")) {
str_replace_all(readFile[i],A,"Cf.Sfa")
str_replace_all(readFile[i],B,"Cf.Gai")
write(readFile[i],file="FixedData.vcf",append=TRUE)
}
}
A <- "[Cc][Ff](07)?\\.[Aa]2?"
B <- "[Cc][Gg](07)?\\.[Aa]2?"
str_replace_all(readFile[2],B,"Cf.Gai")
